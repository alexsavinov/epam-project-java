<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
        integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js"
        integrity="sha384-IDwe1+LCz02ROU9k972gdyvl+AESN10+x7tBKgc9I5HFtuNz0wWnPclzo6p9vxnk"
        crossorigin="anonymous"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>


<script type="text/javascript">

    // $("[data-bs-toggle='tooltip']").on('shown.bs.tooltip', function(){
    // $("[data-bs-toggle='tooltip']").on('click', function(){
    //     console.log("!!!!!!!!!!")
    //     alert('Tooltip is completely visible now.');
    // });
    function validate(element) {

        // var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        // var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
        //     return new bootstrap.Tooltip(popoverTriggerEl)
        // })
        // [...document.querySelectorAll('[data-bs-toggle="popover"]')]
        //     .forEach(el => new bootstrap.Popover(el));

        // [...document.querySelectorAll('[data-bs-toggle="tooltip"]')]
        //     .forEach(el => new bootstrap.Tooltip(el));

        // new bootstrap.Tooltip(element);
        //
        // $('.tooltip').remove();

        // [...document.querySelectorAll('[data-bs-toggle="tooltip"]')]
        //     .forEach(el => new bootstrap.Tooltip(el))

        // $(document).ready(function() {
        //     $("body").tooltip({ selector: '[data-bs-toggle="tooltip"]' });
        // });


        // let val = element.value;
        // $('#cost_min').popover('show');

        // $('#cost_min').popover({"hide": 100});
        // $('#cost_min').popover('hide')
        $('.tooltip').remove();

        // element.setAttribute("data-bs-title", " ");
        // element.setAttribute("data-title", " ");
        // element.classList.remove("border", "border-danger", "border-4");
        // console.log("dismiss!!")
        // $('#cost_min').tooltip("disable");

        console.log('------------- element.id', element.id);
        switch (element.id) {
            case 'cost_min':
                const cost_max = parseInt(document.getElementById('cost_max').value);

                if (cost_max > 0 && element.value > cost_max) {

                    // console.log('cost_max >= 0', cost_max)
                    $(element).attr('data-bs-title', 'Maximum cost is ' + cost_max + ' !!')

                    element.classList.add('border', 'border-danger', 'border-4');

                    new bootstrap.Tooltip(element);

                    $(element).tooltip('show');

                } else {
                    // element.setAttribute("data-bs-title", " ");
                    // element.setAttribute("data-title", " ");
                    // element.setAttribute("data-bs-content", " ");
                    element.classList.remove("border", "border-danger", "border-4");
                    // console.log('hide')
                    // $(element).tooltip("hide");
                    // $(element).tooltip("disable");
                    // $(element).popover("dispose");
                    // $(element).popover("disable");
                    $(element).click();
                }
                break;
            case "cost_max":
                const cost_min = parseInt(document.getElementById("cost_min").value);
                if (cost_min) element.value = Math.max(cost_min, element.value);
                // element.setAttribute("title", cost_min + "!!!");
                // $('#' + element.id).popover("toggle");

                break;
            case "travel_time_min":
                const travel_time_max = parseInt(document.getElementById("travel_time_max").value);
                if (travel_time_max) element.value = Math.min(travel_time_max, element.value);
                break;
            case "travel_time_max":
                const travel_time_min = parseInt(document.getElementById("travel_time_min").value);
                if (travel_time_min) element.value = Math.max(travel_time_min, element.value);
                break;
            default:
                // console.log("default")
            // element.setAttribute("title", "_");
            // $('#' + element.id).popover("hide");
        }

        // const min = parseInt(element.getAttribute("min"));
        // if (min != null) {
        //     console.log("check min: ", min)
        //     if (element.value < min) {
        //         // element.value = min;
        //         // console.log("element tittle1", element.getAttribute("data-bs-title"))
        //         // console.log("** element.svalue < min: ", element.value)
        //         element.setAttribute("data-bs-title", "Minimum value is " + min + " !!");
        //         element.setAttribute("data-title", "1Minimum value is " + min + " !!");
        //         // console.log("element", element)
        //         $('#' + element.id).tooltip("enable");
        //         $('#' + element.id).tooltip("show");
        //         element.classList.add("border", "border-danger", "border-4");
        //     } else {
        //         element.setAttribute("data-bs-title", " ");
        //         element.setAttribute("data-title", " ");
        //         element.classList.remove("border", "border-danger", "border-4");
        //         // console.log("dismiss!!")
        //         $('#' + element.id).tooltip("disable");
        //     }
        //     return
        //     // element.value = Math.max(min, element.value);
        // }
        //
        // const max = parseInt(element.getAttribute("max"));
        // if (max) {
        //     console.log("max", max);
        //
        //     // element.setAttribute("title", min + "max");
        //     // $('#' + element.id).popover("toggle");
        //
        //     element.value = Math.min(max, element.value);
        // }


    }


    // DATE RANGE settings
    var startDate = new Date();
    var endDate = new Date();
    startDate.setMonth(endDate.getMonth() - 2);
    endDate.setMonth(endDate.getMonth() + 2);
    $(function () {
        $('input[name="daterange"]').daterangepicker({
            startDate: startDate,
            endDate: endDate,
            // timePicker: true,
            // timePickerIncrement: 30,
            locale: {
                format: 'DD/MM/YYYY'
            }
        });
    });

    function goBack(url) {
        if (url) {
            window.location.href = url;
        } else {
            history.back();
        }
    }

    function goByUrl(a) {
        window.location.href = a;
    }

    function updateTime() {
        const date_departure = document.getElementById("date_departure").value;
        const date_arrival = document.getElementById("date_arrival").value;
        const date1 = new Date(date_departure);
        // const date1 = moment(new Date(date_departure)).format('YYYY-MM-DDTHH:mm');
        const date2 = new Date(date_arrival);
        const diffTime = Math.abs(date2 - date1);

        document.getElementById("travel_time").value = msToTime(diffTime);
    }

    function msToTime(duration) {
        let milliseconds = Math.floor((duration % 1000) / 100),
            seconds = Math.floor((duration / 1000) % 60),
            minutes = Math.floor((duration / (1000 * 60)) % 60),
            hours = Math.floor((duration / (1000 * 60 * 60)) % 24),
            days = Math.floor(duration / (1000 * 60 * 60 * 24));

        if (seconds) seconds = (seconds == 1) ? "1 second" : seconds + " seconds";
        if (minutes) minutes = (minutes == 1) ? "1 minute " : minutes + " minutes ";
        if (hours) hours = (hours == 1) ? "1 hour " : hours + " hours ";
        if (days) days = (days == 1) ? "1 day " : days + " days ";

        return ((days) ? days : "")
            + ((hours) ? hours : "")
            + ((minutes) ? minutes : "")
            + ((seconds) ? seconds : "");
    }

    function updateUser() {
        const id = document.getElementById("user").value;
        $.ajax({
            url: "/users/get/" + id,
            type: "POST",
            // data: new FormData(document.getElementById("fileForm")),
            data: {
                user_id: id,
                json: true
            },
            // enctype: 'multipart/form-data',
            // processData: false,
            // contentType: false,
            success: function (res) {
                console.log('RESPONSE: ', res);
                // $(".impostSuccess").modal('show');
                // file.val('');
                document.getElementById("user_id").value = res.id;
                document.getElementById("user_name").value = res.name;
            },
            error: function (err) {
                // file.val('');
                console.log('RESPONSE: ', err);
                // $(".impostFail").modal('show');
            }
        });
    }

    function updateRoute() {
        const id = document.getElementById("route").value;

        $.ajax({
            url: "/routes/getById/" + id,
            type: "POST",
            data: {
                reqValue: id
            },
            success: function (res) {
                // console.log('RESPONSE: ', res);
                document.getElementById("train_number").value = res.train_number;
                document.getElementById("station_departure").value = res.station_departure.name;
                document.getElementById("station_arrival").value = res.station_arrival.name;
                document.getElementById("date_departure").value = res.date_departure;
                document.getElementById("date_arrival").value = res.date_arrival;
                document.getElementById("travel_cost").value = res.travel_cost;
                document.getElementById("seats_available").value = res.seats_available;
                document.getElementById("seats_total").value = res.seats_total;
            },
            error: function (err) {
                console.log('ERROR: ', err);
            }
        });

        updateTime();
    }

    function updateRoutes() {

        $.ajax({
            url: "/routes/getAll",
            type: "POST",
            // data: {
            //     reqValue: id
            // },
            success: function (res) {
                // console.log('RESPONSE: ', res);
                document.getElementById("train_number").value = res.train_number;
                document.getElementById("station_departure").value = res.station_departure.name;
                document.getElementById("station_arrival").value = res.station_arrival.name;
                document.getElementById("date_departure").value = res.date_departure;
                document.getElementById("date_arrival").value = res.date_arrival;
                document.getElementById("travel_cost").value = res.travel_cost;
                document.getElementById("seats_available").value = res.seats_available;
                document.getElementById("seats_total").value = res.seats_total;
            },
            error: function (err) {
                console.log('ERROR: ', err);
            }
        });

        updateTime();
    }

    function resetForm() {
        // e.preventDefault();

        // const id = document.getElementById("user").value;
        $.ajax({
            url: "/search",
            type: "POST",
            // data: new FormData(document.getElementById("fileForm")),
            data: {
                action: "reset",
                // json: true
            },
            // enctype: 'multipart/form-data',
            // processData: false,
            // contentType: false,
            success: function (res) {
                // console.log('RESPONSE: ', res);
                // console.log('RESPONSE: ', 'OK');

                document.getElementById('daterange').value = "";
                document.getElementById('station_arrival_id').value = 0;
                document.getElementById('station_departure_id').value = 0;
                document.getElementById('min_seats').value = "";
                document.getElementById('cost_min').value = "";
                document.getElementById('cost_max').value = "";
                document.getElementById('travel_time_min').value = "";
                document.getElementById('travel_time_max').value = "";


                // $(".impostSuccess").modal('show');
                // file.val('');
                // document.getElementById("user_id").value = res.id;
                // document.getElementById("user_name").value = res.name;
            },
            error: function (err) {
                // file.val('');
                console.log('ERROR: ', err);
                // $(".impostFail").modal('show');
            }
        });
    }

    function submitForm() {
        const frm = $('#searchForm');

        frm.submit(function (e) {

            e.preventDefault();

            $.ajax({
                type: frm.attr('method'),
                url: frm.attr('action'),
                data: {
                    'action': 'search',
                    'from': frm.serialize()
                },
                success: function (res) {
                    console.log('Submission was successful.');
                    console.log(res);

                    // clear child nodes
                    const routes = document.getElementById("routes");
                    while (routes.firstChild) {
                        routes.removeChild(routes.lastChild);
                    }

                    divWrapper = document.createElement("div");
                    divWrapper.classList.add('_wrapper-table');
                    routes.appendChild(divWrapper);

                    // creating table
                    const table = document.createElement('table');
                    table.classList.add('table', 'table-striped', 'table-hover', 'p-5', 'mt-3');
                    divWrapper.appendChild(table);

                    const thead = document.createElement('thead');
                    table.appendChild(thead);

                    const trHead = document.createElement('tr');
                    thead.appendChild(trHead);

                    appendTr(trHead, 'Train #');
                    appendTr(trHead, 'Departure');
                    appendTr(trHead, 'Date/time departure');
                    appendTr(trHead, 'Travel time');
                    appendTr(trHead, 'Arrival');
                    appendTr(trHead, 'Date/time arrival');
                    appendTr(trHead, 'Travel cost');
                    appendTr(trHead, 'Seats total');
                    appendTr(trHead, 'Seats available');

                    const tbody = document.createElement('tbody');
                    table.appendChild(tbody);

                    let tr, td, th;

                    for (var i = 0; i < res.data.length; i++) {
                        tr = document.createElement('tr');
                        tr.setAttribute("onclick", 'changeFunc("/search/reserve/' + i + '")');
                        tr.id = 'row' + i;
                        tbody.appendChild(tr);

                        th = document.createElement('th');
                        th.setAttribute('scope', 'col');
                        th.innerText = res.data[i].train_number;
                        tr.appendChild(th);

                        appendTd(tr, res.data[i].station_departure.name);
                        appendTd(tr, res.data[i].date_departure);
                        appendTd(tr, 0);
                        appendTd(tr, res.data[i].station_arrival.name);
                        appendTd(tr, res.data[i].date_arrival);
                        appendTd(tr, res.data[i].travel_cost);
                        appendTd(tr, res.data[i].seats_total);
                        appendTd(tr, res.data[i].seats_available);
                    }

                    console.log(routes)
                },
                error: function (data) {
                    console.log('An error occurred.');
                    console.log(data);
                },
            });
        });
    }

    function appendTr(parentElement, tittle) {
        const element = document.createElement('th');
        element.setAttribute('scope', 'col');
        element.innerText = tittle;
        parentElement.appendChild(element);
    }

    function appendTd(parentElement, tittle) {
        const element = document.createElement('td');
        element.innerText = tittle;
        parentElement.appendChild(element);
    }

    function goByPage(pg_page) {
        if (pg_page) {
            document.getElementById("pg_page").value = pg_page;
            document.getElementById("paginatorForm").submit();
        }
    }


    function setLanguage(locale, url) {

        document.getElementById("changeLocale").submit();
        // const frm = $('#changeLocale');
        //
        //
        // frm.submit(function (e) {
        //
        //     console.log('frm', frm)
        //     // e.preventDefault();
        //
        //     $.ajax({
        //         type: frm.attr('method'),
        //         url: frm.attr('action'),
        //         data: {
        //             locale: locale,
        //             url: url
        //         },
        //         success: function (res) {
        //             console.log('Submission was successful.');
        //             console.log(res);
        //         },
        //         error: function (data) {
        //             console.log('An error occurred.');
        //             console.log(data);
        //         },
        //     });
        // });
    }

</script>